// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using fonenako.DatabaseContexts;

namespace fonenako_service.Migrations
{
    [DbContext(typeof(FonenakoDbContext))]
    [Migration("20230415155223_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("fonenako.Models.LeaseOffer", b =>
                {
                    b.Property<int>("LeaseOfferID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("OfferId")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Carousel")
                        .HasColumnType("text")
                        .HasColumnName("Carousel");

                    b.Property<string>("ConcatenedPhotos")
                        .HasColumnType("text")
                        .HasColumnName("Photos");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreationDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Description");

                    b.Property<int>("LocalisationId")
                        .HasColumnType("integer")
                        .HasColumnName("LocalisationId");

                    b.Property<int?>("LocalisationId1")
                        .HasColumnType("integer");

                    b.Property<double>("MonthlyRent")
                        .HasColumnType("double precision")
                        .HasColumnName("MonthlyRent");

                    b.Property<int>("Rooms")
                        .HasColumnType("integer")
                        .HasColumnName("Rooms");

                    b.Property<double>("Surface")
                        .HasColumnType("double precision")
                        .HasColumnName("Surface");

                    b.Property<string>("Title")
                        .HasColumnType("text")
                        .HasColumnName("Title");

                    b.HasKey("LeaseOfferID");

                    b.HasIndex("LocalisationId");

                    b.HasIndex("LocalisationId1");

                    b.ToTable("LeaseOffer");
                });

            modelBuilder.Entity("fonenako_service.Models.Localisation", b =>
                {
                    b.Property<int>("LocalisationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("LocalisationId")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("HierarchyId")
                        .HasColumnType("integer")
                        .HasColumnName("HierarchyId");

                    b.Property<int?>("LocalisationId1")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("Type");

                    b.HasKey("LocalisationId");

                    b.HasIndex("HierarchyId");

                    b.HasIndex("LocalisationId1");

                    b.ToTable("Localisation");
                });

            modelBuilder.Entity("fonenako.Models.LeaseOffer", b =>
                {
                    b.HasOne("fonenako_service.Models.Localisation", null)
                        .WithMany()
                        .HasForeignKey("LocalisationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("fonenako_service.Models.Localisation", "Localisation")
                        .WithMany("LeaseOffers")
                        .HasForeignKey("LocalisationId1");

                    b.Navigation("Localisation");
                });

            modelBuilder.Entity("fonenako_service.Models.Localisation", b =>
                {
                    b.HasOne("fonenako_service.Models.Localisation", "Hierarchy")
                        .WithMany()
                        .HasForeignKey("HierarchyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("fonenako_service.Models.Localisation", null)
                        .WithMany("SubLocalisations")
                        .HasForeignKey("LocalisationId1");

                    b.Navigation("Hierarchy");
                });

            modelBuilder.Entity("fonenako_service.Models.Localisation", b =>
                {
                    b.Navigation("LeaseOffers");

                    b.Navigation("SubLocalisations");
                });
#pragma warning restore 612, 618
        }
    }
}
